import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

plugins {
	id 'groovy' // groovy support
	id 'java' // java support
	id 'scala' // scala support
	id 'com.diffplug.spotless' version '5.7.0'//code format
	id "com.github.johnrengelman.shadow" version "7.0.0" // fat jar
	id "org.scoverage" version "5.0.0" // scala code coverage scoverage
}

ext {
	scalaVersion = '2.13'
	scalaBinaryVersion = '2.13.5'
	javaVersion = JavaVersion.VERSION_11

	calibanVersion = '0.10.1'
	slf4jVersion = '1.7.26'

	scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator //location of script plugins

	mainClass = 'info.coverified.spider.main.Main'
}

apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'tests.gradle'
apply from: scriptsLocation + 'scoverage.gradle'
apply from: scriptsLocation + 'utils.gradle'

group = 'info.coverified'
version = '0.1-SNAPSHOT'
description = 'Spider Service'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

configurations {
	scalaCompilerPlugin
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {

	// coverified dependencies
	implementation 'com.github.coverified:graphQLConnector:0b3824a'

	// sentry loggin
	implementation 'io.sentry:sentry-log4j2:4.3.0'

	// https://mvnrepository.com/artifact/com.github.ghostdogpr/caliban
	implementation group: 'com.github.ghostdogpr', name: "caliban_${scalaVersion}", version: "${calibanVersion}"

	// https://mvnrepository.com/artifact/com.github.ghostdogpr/caliban-client
	implementation group: 'com.github.ghostdogpr', name: "caliban-client_${scalaVersion}", version: "${calibanVersion}"

	// https://mvnrepository.com/artifact/com.github.ghostdogpr/caliban-tools
	implementation group: 'com.github.ghostdogpr', name: "caliban-tools_${scalaVersion}", version: "${calibanVersion}"

	// cmd args parser //
	implementation "com.github.scopt:scopt_${scalaVersion}:4.0.0"

	implementation 'io.lemonlabs:scala-uri_2.13:3.5.0'

	// CORE Scala //
	implementation "org.scala-lang:scala-library:${scalaBinaryVersion}"
	implementation "org.scala-lang.modules:scala-parallel-collections_${scalaVersion}: 1.0.2"

	// CORE akka //
	implementation platform("com.typesafe.akka:akka-bom_${scalaVersion}:2.6.14")
	implementation "com.typesafe.akka:akka-actor-typed_${scalaVersion}"

	implementation "com.typesafe.akka:akka-stream_${scalaVersion}"
	testImplementation "com.typesafe.akka:akka-actor-testkit-typed_${scalaVersion}"

	// jsoup html parser
	implementation group: 'org.jsoup', name: 'jsoup', version: '1.13.1'

	// url validator
	implementation group: 'commons-validator', name: 'commons-validator', version: '1.7'

	// testing
	testImplementation "org.scalatest:scalatest_${scalaVersion}:3.2.8"
	testRuntimeClasspath 'com.vladsch.flexmark:flexmark-all:0.35.10'
	testImplementation "com.github.tomakehurst:wiremock-jre8:2.28.1" // for local mock server

	// logging
	implementation "org.slf4j:slf4j-api:${slf4jVersion}"  // slf4j wrapper
	implementation 'com.lmax:disruptor:3.4.2' // async logging
	implementation 'org.apache.logging.log4j:log4j-api:2.14.0' // log4j
	implementation 'org.apache.logging.log4j:log4j-core:2.14.0' // log4j
	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.14.0' // log4j -> slf4j

	implementation "com.typesafe.scala-logging:scala-logging_${scalaVersion}:3.9.2" // akka scala logging
	implementation 'com.typesafe.scala-logging:scala-logging-slf4j_2.11:2.1.2'// scala logging
	implementation "org.slf4j:log4j-over-slf4j:${slf4jVersion}" // slf4j -> log4j


}

shadowJar {
	transform(AppendingTransformer) {
		resource = 'reference.conf'
	}
	with jar
}