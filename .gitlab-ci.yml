stages:
  - build
  - test
  - containerize
  - release

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.cache/.gradle"

cache:
  paths:
    - .cache/.gradle

build4dockerImage:
  stage: build
  image: registry.gitlab.com/coverified/infrastructure/scala-base:latest
  script:
    - ./gradlew shadowJar
    - ./gradlew projectProperties
  artifacts:
    reports:
      dotenv: build/build.env
    paths:
      - build/libs/
    expire_in: 1 day

test:
  stage: test
  image: registry.gitlab.com/coverified/infrastructure/scala-base:latest
  script:
    - ./gradlew reportScoverage checkScoverage
  artifacts:
    reports:
      junit: build/reports/tests/xml/*.xml
      cobertura: build/reports/scoverage/cobertura.xml
  dependencies: []

buildDockerImage:
  stage: containerize
  image: docker:20
  services:
    - docker:20-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --build-arg PROJECT_NAME --build-arg PROJECT_VERSION --build-arg MAIN_CLASS --build-arg SENTRY_RELEASE=$CI_COMMIT_SHA .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - docker push --all-tags $CI_REGISTRY_IMAGE
  needs:
    - test
    - build4dockerImage
  cache: {}

release-image:
    stage: release
    image: docker:20
    services:
      - docker:20-dind
    script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
      - docker push --all-tags $CI_REGISTRY_IMAGE
    only:
      - main
    cache: {}
